export declare class Logger {
    private static instances;
    private logger;
    private serviceName;
    /**
     * Private constructor of the Logger class.
     * @param serviceName The name of the module or component.
     */
    private constructor();
    /**
     * Retrieves the singleton instance of the Logger class.
     * If the instance doesn't exist, it creates a new instance.
     * @param serviceName The name of the module or component.
     * @returns The Logger instance.
     */
    static getInstance(serviceName: string): Logger;
    /**
     * Logs an error message.
     * @param message The error message to be logged.
     */
    error(message: string): void;
    /**
     * Logs a warning message.
     * @param message The warning message to be logged.
     */
    warn(message: string): void;
    /**
     * Logs an information message.
     * @param message The information message to be logged.
     */
    info(message: string): void;
    /**
     * Logs a debug message.
     * @param message The debug message to be logged.
     */
    debug(message: string): void;
    /**
     * Logs a silly message.
     * @param message The debug message to be logged.
     */
    silly(message: string): void;
}
