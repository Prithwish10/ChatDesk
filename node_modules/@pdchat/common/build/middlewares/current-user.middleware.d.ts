import { Request, Response, NextFunction } from "express";
import { UserPayload } from "../interfaces/UserPayload";
declare global {
    namespace Express {
        interface Request {
            currentUser?: UserPayload;
        }
    }
}
/**
 * Middleware to check if the current user is authenticated by verifying the JSON Web Token (JWT) stored in the session.
 * If a valid JWT is found, the user payload is extracted and stored in the `req.currentUser` property for further use.
 * If no JWT is found, the middleware simply proceeds to the next middleware or route handler.
 *
 * @param req - The Express.js request object.
 * @param res - The Express.js response object.
 * @param next - The callback function to invoke to pass control to the next middleware or route handler.
 * @returns This function does not have a return value.
 */
export declare const currentUser: (req: Request, res: Response, next: NextFunction) => void;
