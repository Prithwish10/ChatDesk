import { Request, Response, NextFunction } from "express";
import { BaseError } from "../errors/BaseError";
/**
 * Middleware to handle a 422 Unprocessable Entity error (validation error).
 * If the provided error has a name of "ValidationError", it logs the error, constructs an appropriate response with a status code of 422,
 * and sends it as a JSON response to the client.
 * Otherwise, it passes the error to the next middleware or error handler.
 *
 * @param err - The error object.
 * @param req - The Express.js request object.
 * @param res - The Express.js response object.
 * @param next - The callback function to invoke to pass control to the next middleware or error handler.
 * @returns If the error is a validation error, the function sends a JSON response and ends the response. Otherwise, it passes the error to the next middleware or error handler.
 */
declare const handle422Error: (err: BaseError, req: Request, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>;
/**
 * Middleware to handle a 404 Not Found error.
 * If the provided error has a name of "Not found", it logs the error, constructs an appropriate response with a status code of 404,
 * and sends it as a JSON response to the client.
 * Otherwise, it passes the error to the next middleware or error handler.
 *
 * @param err - The error object.
 * @param req - The Express.js request object.
 * @param res - The Express.js response object.
 * @param next - The callback function to invoke to pass control to the next middleware or error handler.
 * @returns If the error is a Not Found error, the function sends a JSON response and ends the response. Otherwise, it passes the error to the next middleware or error handler.
 */
declare const handle404Error: (err: BaseError, req: Request, res: Response, next: NextFunction) => void | Response<any, Record<string, any>>;
/**
 * Middleware to handle generic errors.
 * It logs the provided error, sets the appropriate status code on the response, and sends an error response as JSON to the client.
 *
 * @param err - The error object.
 * @param req - The Express.js request object.
 * @param res - The Express.js response object.
 * @param next - The callback function to invoke to pass control to the next middleware or error handler.
 * @returns This function does not have a return value.
 */
declare const handleError: (err: BaseError, req: Request, res: Response, next: NextFunction) => void;
export { handle422Error, handleError, handle404Error };
